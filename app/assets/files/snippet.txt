{"log":"console.log();","seconds":"new Date().setHours(0, 0, 0, 0) / 1000","map":".map((element,index)=>{\nreturn element;\n})","wxfor":"wx:for=\"{{lessons}}\" wx:key=\"*this\"","switch":"switch(){\n\n}","view":"<view class=\"wrapper\" style=\"padding:32rpx 32rpx\">\n</view>","flex":"display:flex;align-items: center;justify-content: center;","border":"60,176,53","center":"\n.center{top: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\n}","navigate":"bindtap=\"navigate\" data-tab=\"/pages/index/index\"","id":"data-id=\"{{item.id}}\" bindtap=\"{{onSubmit}}\"","style":"style=\"padding:32rpx 32rpx;width:24px;height:24px;\"","b":"<!-- -->","load":"    let baseUri = window.location.host === \"127.0.0.1:5500\" ? 'http://127.0.0.1:8081' : ''\n    async function loadData() {\n      const response = await fetch(`${baseUri}/v1/admin/notices`, {\n        headers: {\n          \"Authorization\": window.localStorage.getItem(\"Authorization\")\n        }\n      })\n      return response.json();\n    }\n    async function render() {\n      const wrapper = document.querySelector('.wrapper');\n      let obj;\n      try {\n        obj = await loadData();\n        obj.forEach(value => {\n          const div = document.createElement('div');\n          div.textContent = value.title;\n          div.addEventListener('click', evt => {\n            evt.stopPropagation();\n          });\n          wrapper.appendChild(div);\n        })\n      } catch (error) {\n\n      }\n    }\n    render();","toast":"<custom-toast id=\"toast\"></custom-toast>\n<script src=\"toast.js\"></script>\ndocument.getElementById('toast').setAttribute('message','成功');\ndocument.getElementById('toast').setAttribute('message', `错误${error.messaage}`);","link":"\n<link rel=\"stylesheet\" href=\"css/.css\">\n<script src=\"js/.js\"></script>","search":"const id = new URL(document.URL).searchParams.get('id');","submit":"const submit = document.querySelector('.submit');\nsubmit.addEventListener('submit', async evt => {\nevt.stopPropagation();\nconst data = {};\ndata.id = id;\ndata.title = title.value.trim();\ndata.content = content.value.trim();\ntry {\nconst response = await fetch(`${baseUri}/v1/admin/notice/update`, {\nmethod: 'POST',\nheaders: {\n\"Authorization\": window.localStorage.getItem(\"Authorization\")\n},\nbody: JSON.stringify(data)\n});\nawait response.text();\ndocument.getElementById('toast').setAttribute('message','成功');\n} catch (error) {\nconsole.log(error);\ndocument.getElementById('toast').setAttribute('message','失败');\n}\n});","click":"document.querySelector('.').addEventListener('click', evt => {\n});","upload":"const input = document.createElement('input');\ninput.type = \"file\";\ninput.accept = \"image/*\";\ninput.style = \"display:fixed;left:-100%\";\ndocument.body.appendChild(input);\ninput.click();\ninput.addEventListener('change', async evt => {\ninput.remove();\nconst formData = new FormData();\nformData.append(\"images\", input.files[0]);\nconst res = await fetch(`${baseUri}/v1/picture`, {\nmethod: 'POST',\nbody: formData\n});\nconst src = await res.text();\nimg.src = `https://lucidu.cn/images/${src}`;\ninputThumbnail.dataset.src = src;","try":"try{\n\n}catch(error){\nconsole.log(error);\n}","del":"function showCloseDialog(id) {\nconst customDialog = document.createElement('custom-dialog');\ncustomDialog.addEventListener('submit', submitCloseHandler);\ncustomDialog.dataset.id = id;\ndocument.body.appendChild(customDialog);\n}\n\nfunction bindCloseButton(svg) {\nsvg.addEventListener('click', evt => {\nshowCloseDialog(evt.currentTarget.parentNode.dataset.id);\n});\n}\n\nasync function submitCloseHandler(evt) {\nevt.stopPropagation();\nconst id = evt.currentTarget.dataset.id;\nconsole.log(id);\nevt.currentTarget.remove();\ntry {\nconst res = await fetch(`${baseUri}/v1/admin/notice/delete?id=${id}`, {\nheaders: {\n\"Authorization\": window.localStorage.getItem(\"Authorization\")\n}\n});\nif (res.status > 399 || res.status < 200) { throw new Error(`${res.status} ${res.statusText}`); } await\nres.text(); await render(); } catch (error) { console.log(error); } }","bind":"document.querySelectorAll('[bind]').forEach(value=> {\nconst keys = value.getAttribute('bind').split(':');\nvalue.addEventListener(keys[0], evt => {\nwindow[keys[1]](evt);\n})\n})","fetch":"try {\n    const response = await fetch(``);\n    const obj = await response.json();\n} catch (error) {\n    console.log(error);\n}","timego":"function timeSpan(atime, btime) {\n      var milliseconds = +(btime || new Date()) - +atime;\n      var seconds = ~~(milliseconds / 1000);\n      var minutes = ~~(milliseconds / (1 * 60 * 1000));\n      var hours = ~~(milliseconds / (1 * 60 * 60 * 1000));\n      var days = ~~(milliseconds / (1 * 24 * 60 * 60 * 1000));\n      var years = ~~(days / 365.5);\n      return {\n        years,\n        days,\n        hours,\n        minutes,\n        seconds,\n        milliseconds\n      };\n    }\n\n    function timeAgo(time, locales = 'zh') {\n      const ts = timeSpan(time);\n      if (!i18n[locales]) locales = 'zh';\n      if (ts.seconds < 60) return i18n[locales].justNow;\n      if (ts.minutes < 60) return ts.minutes + ' ' + i18n[locales].minutesAgo;\n      if (ts.hours < 24) return ts.hours + ' ' + i18n[locales].hoursAgo;\n      if (ts.days < 7) return ts.days + ' ' + i18n[locales].daysAgo;\n      if (ts.days < 30) return ~~(ts.days / 7) + ' ' + i18n[locales].weeksAgo;\n      if (ts.years < 1) return ~~(ts.days / 30) + ' ' + i18n[locales].monthsAgo;\n      return ts.years + ' ' + i18n[locales].yearsAgo;\n    }\n\n    const i18n = {\n      zh: {\n        justNow: '刚刚',\n        minutesAgo: '分钟前',\n        hoursAgo: '小时前',\n        daysAgo: '天前',\n        weeksAgo: '周前',\n        monthsAgo: '个月前',\n        yearsAgo: '年前',\n      },\n      en: {\n        justNow: 'just now',\n        minutesAgo: 'minutes ago',\n        hoursAgo: 'hours ago',\n        daysAgo: 'days ago',\n        weeksAgo: 'weeks ago',\n        monthsAgo: 'months ago',\n        yearsAgo: 'years ago',\n      },\n    };","encodeUri":"encodeURIComponent()","html5":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    \n</body>\n</html>","script":"<script>\n</script>\n"}